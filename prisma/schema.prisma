generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-1.1.x"]
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id        String    @id @default(cuid())
  name      String?
  email     String    @unique
  password  String
  contact   String?
  packageId String?
  package   Package?  @relation(fields: [packageId], references: [id])
  updatedAt DateTime  @updatedAt
  createdAt DateTime  @default(now())
  deletedAt DateTime?
  role      Role      @default(USER)
  imaps     Imap[]

  @@map("users")
}

enum Role {
  ADMIN
  USER
}

model Package {
  id        String    @id @default(cuid())
  name      String
  price     Float
  users     User[]
  deletedAt DateTime?

  @@map("packages")
}

model Filter {
  id        String   @id @default(cuid())
  name      String
  updatedAt DateTime @updatedAt
  createdAt DateTime @default(now())

  @@map("filters")
}

model Imap {
  id        String    @id @default(cuid())
  email     String
  userId    String?
  user      User?     @relation(fields: [userId], references: [id])
  deletedAt DateTime?
  expiredAt DateTime?

  @@map("imaps")
}

model Token {
  id           String   @id
  accessToken  String   @map("access_token")
  refreshToken String   @map("refresh_token")
  tokenType    String   @map("token_type")
  scope        String
  expiryDate   DateTime @map("expiry_date")

  @@map("tokens")
}

model OtpHouseholdFilter {
  id        String   @id @default(cuid())
  name      String
  updatedAt DateTime @updatedAt
  createdAt DateTime @default(now())

  @@map("otp_household_filters")
}
